package edu.harvard.we99.services.storage.entities;

import edu.harvard.we99.domain.results.ResultStatus;
import org.hibernate.annotations.Type;
import org.joda.time.DateTime;

import javax.annotation.Generated;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

/**
 * @author mford
 */
@Entity
@Table(name = "samples")
public class SampleEntity {
    /**
     * Primary key field is auto generated
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The value from the device
     */
    @NotNull
    private Double value;


    /**
     * Optional label to help aggregate this sample with others
     */
    private String label;

    /**
     * Optional comments from the user about this sample
     */
    private String comments;

    /**
     * The time that the sample was recorded by the device (may be null)
     */
    @Type(type="org.jadira.usertype.dateandtime.joda.PersistentDateTime")
    private DateTime measuredAt;

    /**
     * Status of the sample. Rejecting a point from the analysis doesn't delete
     * the point but instead just flips this value from INCLUDED to EXCLUDED.
     */
    private ResultStatus status = ResultStatus.INCLUDED;

    @PrePersist @PreUpdate
    private void check() {
        assert value != null;
    }

    @Generated("generated by IDE")
    public Long getId() {
        return id;
    }

    @Generated("generated by IDE")
    public SampleEntity setId(Long id) {
        this.id = id;
        return this;
    }

    @Generated("generated by IDE")
    public Double getValue() {
        return value;
    }

    @Generated("generated by IDE")
    public SampleEntity setValue(Double value) {
        this.value = value;
        return this;
    }

    @Generated("generated by IDE")
    public String getLabel() {
        return label;
    }

    @Generated("generated by IDE")
    public SampleEntity setLabel(String label) {
        this.label = label;
        return this;
    }

    @Generated("generated by IDE")
    public String getComments() {
        return comments;
    }

    @Generated("generated by IDE")
    public SampleEntity setComments(String comments) {
        this.comments = comments;
        return this;
    }

    @Generated("generated by IDE")
    public DateTime getMeasuredAt() {
        return measuredAt;
    }

    @Generated("generated by IDE")
    public SampleEntity setMeasuredAt(DateTime measuredAt) {
        this.measuredAt = measuredAt;
        return this;
    }

    @Generated("generated by IDE")
    public ResultStatus getStatus() {
        return status;
    }

    @Generated("generated by IDE")
    public SampleEntity setStatus(ResultStatus status) {
        this.status = status;
        return this;
    }


}

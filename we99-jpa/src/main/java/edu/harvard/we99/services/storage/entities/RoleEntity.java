package edu.harvard.we99.services.storage.entities;

import edu.harvard.we99.security.RoleName;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.MapKey;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import java.util.Map;
import java.util.TreeMap;

/**
 * @author mford
 */
@Entity
@Table(name = "roles")
public class RoleEntity {
    /**
     * Primary key is generated
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull
    @Column(updatable = false, unique = true)
    @Embedded
    private RoleName name;

    public RoleEntity() {}

    public RoleEntity(String name) {
        this.name = new RoleName(name);
    }

    @ManyToMany(fetch = FetchType.EAGER)
    @MapKey(name="name")
    private Map<String,PermissionEntity> permissions = new TreeMap<>();

    @Generated(value = "generated by IDE")
    public Long getId() {
        return id;
    }

    @Generated(value = "generated by IDE")
    public void setId(Long id) {
        this.id = id;
    }

    @Generated(value = "generated by IDE")
    public RoleName getName() {
        return name;
    }

    @Generated(value = "generated by IDE")
    public void setName(RoleName name) {
        this.name = name;
    }

    @Generated(value = "generated by IDE")
    public Map<String, PermissionEntity> getPermissions() {
        return permissions;
    }

    @Generated(value = "generated by IDE")
    public void setPermissions(Map<String, PermissionEntity> permissions) {
        this.permissions = permissions;
    }

    @Generated(value = "generated by IDE")
    public RoleEntity withId(final Long id) {
        this.id = id;
        return this;
    }

    @Generated(value = "generated by IDE")
    public RoleEntity withName(final RoleName name) {
        this.name = name;
        return this;
    }
}

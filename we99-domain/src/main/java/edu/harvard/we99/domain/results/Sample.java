package edu.harvard.we99.domain.results;

import edu.harvard.we99.domain.BaseEntity;
import edu.harvard.we99.jaxb.DateTimeAdapter;
import org.joda.time.DateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * A value produced from the device's analysis for a specific well in the plate.
 * @author mford
 */
public class Sample extends BaseEntity {

    private Long id;

    /**
     * The value from the device
     */
    @NotNull
    private Double value;

    private Double normalized;

    /**
     * Optional label to help aggregate this sample with others
     */
    private String label;

    /**
     * Optional comments from the user about this sample
     */
    private String comments;

    /**
     * The time that the sample was recorded by the device (may be null)
     */
    @XmlJavaTypeAdapter(DateTimeAdapter.class)
    private DateTime measuredAt;

    /**
     * Status of the sample. Rejecting a point from the analysis doesn't delete
     * the point but instead just flips this value from INCLUDED to EXCLUDED.
     */
    private ResultStatus status = ResultStatus.INCLUDED;

    @Generated("generated by IDE")
    public Long getId() {
        return id;
    }

    @Generated("generated by IDE")
    public Sample setId(Long id) {
        this.id = id;
        return this;
    }

    @Generated("generated by IDE")
    public Double getValue() {
        return value;
    }

    @Generated("generated by IDE")
    public Sample setValue(Double value) {
        this.value = value;
        return this;
    }

    @Generated("generated by IDE")
    public Double getNormalized() {
        return normalized;
    }

    @Generated("generated by IDE")
    public Sample setNormalized(Double normalized) {
        this.normalized = normalized;
        return this;
    }

    @Generated("generated by IDE")
    public String getLabel() {
        return label;
    }

    @Generated("generated by IDE")
    public Sample setLabel(String label) {
        this.label = label;
        return this;
    }

    @Generated("generated by IDE")
    public String getComments() {
        return comments;
    }

    @Generated("generated by IDE")
    public Sample setComments(String comments) {
        this.comments = comments;
        return this;
    }

    @Generated("generated by IDE")
    public DateTime getMeasuredAt() {
        return measuredAt;
    }

    @Generated("generated by IDE")
    public Sample setMeasuredAt(DateTime measuredAt) {
        this.measuredAt = measuredAt;
        return this;
    }

    @Generated("generated by IDE")
    public ResultStatus getStatus() {
        return status;
    }

    @Generated("generated by IDE")
    public Sample setStatus(ResultStatus status) {
        this.status = status;
        return this;
    }
}

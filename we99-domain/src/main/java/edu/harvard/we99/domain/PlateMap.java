package edu.harvard.we99.domain;

import edu.harvard.we99.jaxb.WellMapAdapter;

import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * @author mford
 */
public class PlateMap extends AbstractPlate<PlateMap> {

    /**
     * A plate consists of Wells in which the compounds we want to test are placed.
     * Each well is uniquely identified by a row,col coordinate within this plate
     * so we'll store them according to their coordinate.
     */
    @XmlJavaTypeAdapter(value=WellMapAdapter.class) // custom JAXB adapter to convert the map to an array an back again
    @XmlElement(name="wells")
    private Map<Coordinate, WellMap> wells = new LinkedHashMap<>();

    private PlateDimension dim;

    public PlateMap withWells(WellMap...wellMap) {
        for(WellMap wm : wellMap) {
            wells.put(wm.getCoordinate(), wm);
        }
        return this;
    }

    @Generated("generated by IDE")
    public Map<Coordinate, WellMap> getWells() {
        return wells;
    }

    @Generated("generated by IDE")
    public PlateMap setWells(Map<Coordinate, WellMap> wells) {
        this.wells = wells;
        return this;
    }

    @Generated("generated by IDE")
    public PlateDimension getDim() {
        return dim;
    }

    @Generated("generated by IDE")
    public PlateMap setDim(PlateDimension dim) {
        this.dim = dim;
        return this;
    }
}
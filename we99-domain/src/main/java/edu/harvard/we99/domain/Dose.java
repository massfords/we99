package edu.harvard.we99.domain;

import javax.annotation.Generated;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;

/**
 * A dose is the amount (quantity and units) of a compound placed in a well.
 * Some wells comes preloaded with doses while others are empty. Even if a well
 * is pre-loaded, doses can always be changed by the scientist as part of their
 * experiment
 *
 * @author mford
 */
@Entity
public class Dose extends BaseEntity {
    /**
     * Primary key for this entity is generated
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The number of the compound to be put into the well
     */
    @NotNull @Min(0)
    private Integer number = 0;

    /**
     * The units used to measure how much of the compound is in the well
     */
    @NotNull
    private DoseUnit units = DoseUnit.MILLIS;

    /**
     * The compound that is in the well. If a Well is empty, it shouldn't have
     * a dose.
     *
     * todo - do we need some type of "unknown" compound
     */
    @ManyToOne @NotNull
    private Compound compound;

    /**
     * A back pointer to the parent well in which this Dose lives
     */
    @ManyToOne @JoinColumn(updatable = false)
    @XmlTransient
    private Well well;

    @Generated(value = "generated by IDE")
    public Dose withId(final Long id) {
        this.id = id;
        return this;
    }

    @Generated(value = "generated by IDE")
    public Dose withCompound(final Compound compound) {
        this.compound = compound;
        return this;
    }

    @Generated(value = "generated by IDE")
    public Dose withNumber(final int number) {
        this.number = number;
        return this;
    }

    @Generated(value = "generated by IDE")
    public Dose withUnits(final DoseUnit units) {
        this.units = units;
        return this;
    }

    @Generated(value = "generated by IDE")
    public Dose withWell(final Well well) {
        this.well = well;
        return this;
    }


    @Generated(value = "generated by IDE")
    public long getId() {
        return id;
    }

    @Generated(value = "generated by IDE")
    public void setId(long id) {
        this.id = id;
    }

    @Generated(value = "generated by IDE")
    public int getNumber() {
        return number;
    }

    @Generated(value = "generated by IDE")
    public void setNumber(int number) {
        this.number = number;
    }

    @Generated(value = "generated by IDE")
    public DoseUnit getUnits() {
        return units;
    }

    @Generated(value = "generated by IDE")
    public void setUnits(DoseUnit units) {
        this.units = units;
    }

    @Generated(value = "generated by IDE")
    public Compound getCompound() {
        return compound;
    }

    @Generated(value = "generated by IDE")
    public void setCompound(Compound compound) {
        this.compound = compound;
    }

    @Generated(value = "generated by IDE")
    public Well getWell() {
        return well;
    }

    @Generated(value = "generated by IDE")
    public void setWell(Well well) {
        this.well = well;
    }

    @Override
    @Generated(value = "generated by IDE")
    public String toString() {
        return "Dose{" +
                "id=" + id +
                ", number=" + number +
                ", units=" + units +
                '}';
    }
}

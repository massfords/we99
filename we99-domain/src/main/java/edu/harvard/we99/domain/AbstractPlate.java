package edu.harvard.we99.domain;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

/**
 * Base class for Plate and PlateTemplates
 *
 * @author mford
 */
public abstract class AbstractPlate<T extends AbstractPlate> extends BaseEntity {
    private Long id;

    /**
     * Name provided by the user must be unique within the db
     */
    @NotNull
    private String name;

    /**
     * Optional user provided description
     */
    private String description;

    /**
     * Every plate has a plate type that identifies its size, orientation, and manufacturer.
     * There may be 100's of these plate types in the system
     */
    @NotNull
    private PlateType plateType;


    // All of the fluent methods here would be marked as @Generated except I had
    // to tweak them to support the generics
    public T withDescription(final String description) {
        this.description = description;
        //noinspection unchecked
        return (T) this;
    }

    public T withName(final String name) {
        this.name = name;
        //noinspection unchecked
        return (T) this;
    }

    public T withPlateType(final PlateType plateType) {
        this.plateType = plateType;
        //noinspection unchecked
        return (T) this;
    }

    public T withId(final Long id) {
        this.id = id;
        //noinspection unchecked
        return (T) this;
    }


    @Generated(value = "generated by IDE")
    public String getDescription() {
        return description;
    }

    @Generated(value = "generated by IDE")
    public void setDescription(String description) {
        this.description = description;
    }

    @Generated(value = "generated by IDE")
    public Long getId() {
        return id;
    }

    @Generated(value = "generated by IDE")
    public void setId(Long id) {
        this.id = id;
    }

    @Generated(value = "generated by IDE")
    public String getName() {
        return name;
    }

    @Generated(value = "generated by IDE")
    public void setName(String name) {
        this.name = name;
    }

    @Generated(value = "generated by IDE")
    public PlateType getPlateType() {
        return plateType;
    }

    @Generated(value = "generated by IDE")
    public void setPlateType(PlateType plateType) {
        this.plateType = plateType;
    }
}

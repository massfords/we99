<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="edu.harvard.we99" />

    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/WE99" expected-type="javax.sql.DataSource"/>
    <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:/drop-all-h2.sql"/>
        <jdbc:script location="classpath:/we99.ddl"/>
        <jdbc:script location="classpath:/populate-users.sql"/>
    </jdbc:initialize-database>

    <bean id="plateTemplateService" class="edu.harvard.we99.services.PlateTemplateServiceImpl">
        <constructor-arg ref="plateTemplateStorage"/>
    </bean>
    <bean id="plateTemplateStorage" class="edu.harvard.we99.services.storage.PlateTemplateStorageImpl"/>

    <bean id="plateTypeService" class="edu.harvard.we99.services.PlateTypeServiceImpl">
        <constructor-arg ref="plateTypeStorage"/>
    </bean>
    <bean id="plateTypeStorage" class="edu.harvard.we99.services.storage.PlateTypeStorageImpl"/>

    <bean id="compoundService" class="edu.harvard.we99.services.CompoundServiceImpl">
        <constructor-arg ref="compoundStorage"/>
    </bean>
    <bean id="compoundStorage" class="edu.harvard.we99.services.storage.CompoundStorageImpl"/>

    <bean id="binder" class="java.lang.String" depends-on="dataSource"/>

    <bean id="userStorage" class="edu.harvard.we99.services.storage.UserStorageImpl">
        <constructor-arg ref="passwordEncoder"/>
    </bean>

    <bean id="emailService" class="edu.harvard.we99.security.InternalEmailService">
        <constructor-arg ref="emailConfig"/>
    </bean>

    <bean id="createAccountService" class="edu.harvard.we99.security.CreateAccountServiceImpl">
        <constructor-arg ref="emailFilter"/>
        <constructor-arg ref="emailService"/>
        <constructor-arg ref="userStorage"/>
    </bean>

    <bean id="forgotPasswordService" class="edu.harvard.we99.security.ForgotPasswordServiceImpl">
        <constructor-arg ref="emailService"/>
        <constructor-arg ref="userStorage"/>
        <constructor-arg ref="createAccountService"/>
    </bean>

    <bean id="protocolService" class="edu.harvard.we99.services.ProtocolServiceImpl">
        <constructor-arg ref="protocolStorage"/>
    </bean>
    <bean id="protocolStorage" class="edu.harvard.we99.services.storage.ProtocolStorageImpl"/>


    <bean id="emailFilter" class="edu.harvard.we99.security.EmailFilter">
        <!--
            We'll allow any emails to be registered by default. It seems
            reasonable that an organization may want to limit the emails to a
            single domain. If that's the case, then the admin should enter the
            necessary regex pattern here.
        -->
        <constructor-arg value=".*"/>
    </bean>


    <bean id="emailConfig" class="edu.harvard.we99.security.EmailConfig">
        <constructor-arg index="0" value="smtp.gmail.com"/>
        <constructor-arg index="1" value="587"/>
        <constructor-arg index="2" value="we99.2015@gmail.com"/>
        <constructor-arg index="3" value="***********"/>
        <constructor-arg index="4" value="we99.2015@gmail.com"/>
    </bean>

    <bean id="userService" class="edu.harvard.we99.services.UserServiceImpl">
        <constructor-arg ref="userStorage"/>
    </bean>

    <!--suppress UnparsedCustomBeanInspection -->
    <jaxrs:server address="/rest" >
        <jaxrs:serviceBeans>
            <ref bean="plateTemplateService"/>
            <ref bean="plateTypeService"/>
            <ref bean="protocolService"/>
            <ref bean="compoundService"/>
            <ref bean="createAccountService"/>
            <ref bean="forgotPasswordService"/>
            <ref bean="userService"/>
            <ref bean="swaggerResourceJSON" />
        </jaxrs:serviceBeans>
        <jaxrs:features>
            <bean class="org.apache.cxf.jaxrs.validation.JAXRSBeanValidationFeature"/>
        </jaxrs:features>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider">
                <constructor-arg>
                    <bean class="edu.harvard.we99.util.JacksonMapper"/>
                </constructor-arg>
                <constructor-arg>
                    <array>
                        <value>JACKSON</value>
                        <value>JAXB</value>
                    </array>
                </constructor-arg>
            </bean>
            <bean class="org.apache.cxf.jaxrs.validation.ValidationExceptionMapper"/>
            <ref bean="resourceWriter" />
            <ref bean="apiWriter" />
        </jaxrs:providers>
    </jaxrs:server>

    <!-- Swagger Config -->
    <bean id="swaggerResourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />
    <bean id="resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
    <bean id="apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />

    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="edu.harvard.we99"/>
        <property name="version" value="1.0.0"/>
        <property name="basePath" value="http://localhost:8080/we99/services/rest"/>
        <property name="title" value="WE-99"/>
        <property name="description" value="Harvard Extension Capstone Course"/>
        <property name="contact" value="we99.2015@gmail.com"/>
        <property name="license" value="Apache 2.0 license"/>
        <property name="licenseUrl" value="https://raw.githubusercontent.com/massfords/we99/master/LICENSE"/>
        <property name="scan" value="true"/>
    </bean>

</beans>

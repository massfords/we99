package edu.harvard.we99.security;

import org.apache.commons.io.IOUtils;
import org.apache.commons.lang3.text.StrSubstitutor;

import javax.annotation.Generated;
import java.io.IOException;
import java.io.InputStream;
import java.util.Map;

/**
 * Enum for the different emails the system will send. Each enum will map to a
 * file based template and provide basic formatting capabilities.
 *
 * @author mford
 */
public enum EmailTemplates {
    newUserEmail("/newUserEmail.txt"),
    forgotPassword("/forgotPassword.txt");

    private final String path;

    private EmailTemplates(String path) {
        this.path = path;
    }

    @Generated(value = "generated by IDE")
    public String getPath() {
        return path;
    }

    /**
     * Produces a simple email body as a string. Accepts a map of name/value
     * pairs for injecting into the template source. We're using a simple
     * markup based on ANT style params.
     * @param params
     * @return
     * @throws IOException
     */
    public String format(Map<String, String> params) throws IOException {
        try (InputStream is = getClass().getResourceAsStream(path)) {
            String s = IOUtils.toString(is);
            StrSubstitutor subby = new StrSubstitutor(params);
            return subby.replace(s);
        }
    }
}
